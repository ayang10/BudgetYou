@model BudgetYou.Models.Transaction

@{
    ViewBag.Title = "Create";
}

<br />
<div class="container">
    <h1>Create</h1>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <br />
        <div class="form-horizontal">
            <h4>Transaction</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AccountId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeOfFunction, "Income", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TypeOfFunction)
                        @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @Html.LabelFor(model => model.TypeOfFunction, "Expense", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.TypeOfFunction)
                            @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                        </div>
                   
                </div>
            </div>

            
            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Reconciled)
                        @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.EntryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EntryId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EntryId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.ReconciledAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ReconciledAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReconciledAmount, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
